{"version":3,"file":"static/js/105.f1f97dfe.chunk.js","mappings":"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","sources":["coinmarketcap/index.js","config.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Select, Table, Typography } from 'antd';\nimport BigNumber from 'bignumber.js';\nimport config from '../config';\nimport './index.css';\n\nBigNumber.config({ EXPONENTIAL_AT: 1e9 });\n\nfunction App() {\n  const [coinData, setCoinData] = useState([]);\n  const [coins, setCoins] = useState([]);\n  const [symbol, setSymbol] = useState('BCH');\n  const [tableCols] = useState([\n    {\n      title: '#',\n      dataIndex: 'id',\n      fixed: 'left',\n      width: 200,\n      render: (text, record) => <Typography.Text type={record.symbol === record.highlight ? 'success' : ''}>{text}</Typography.Text>\n    },\n    {\n      title: 'Symbol',\n      dataIndex: 'symbol',\n      render: (text, record) => (\n        <Typography.Link href={`${config.coinmarketcap.detail}${record.slug}`} target=\"_blank\" rel=\"noreferrer\">\n          {text}\n        </Typography.Link>\n      )\n    },\n    {\n      title: 'Market Cap',\n      dataIndex: 'marketCap',\n      render: (text, record) => <Typography.Text type={record.symbol === record.highlight ? 'success' : ''}>{text}</Typography.Text>\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      render: (text, record) => <Typography.Text type={record.symbol === record.highlight ? 'success' : ''}>{text}</Typography.Text>\n    },\n    {\n      title: `${symbol} Target`,\n      dataIndex: 'target',\n      render: (text, record) => <Typography.Text type={record.symbol === record.highlight ? 'success' : ''}>{text}</Typography.Text>\n    }\n  ]);\n  const [tableData, setTableData] = useState([]);\n\n  const ref = useRef(null);\n  const tableRef = useRef(null);\n  ref.current = async () => {\n    const data = await (await fetch(config.coinmarketcap.url)).json();\n    const symbols = data.map(_ => _.symbol);\n    setCoinData(data);\n    setCoins(symbols);\n  };\n  tableRef.current = () => {\n    const data = [];\n\n    const capData = coinData.map(_ => {\n      const {\n        slug,\n        symbol,\n        circulating_supply,\n        quote: {\n          USD: { price, market_cap }\n        }\n      } = _;\n      return {\n        slug,\n        symbol,\n        totalSupply: circulating_supply,\n        price,\n        marketCap: market_cap\n      };\n    });\n    const targetCap = capData.filter(_ => _.symbol === symbol)[0];\n    capData.forEach((_, i) => {\n      const { slug, symbol, price, marketCap } = _;\n      const target = BigNumber(marketCap).div(targetCap.totalSupply);\n      data.push({\n        id: i,\n        slug,\n        symbol,\n        highlight: targetCap.symbol,\n        marketCap: `${toFormat(marketCap)}`,\n        price: `${toFormat(price)}`,\n        target: `${toFormat(target)} (${BigNumber(\n          BigNumber(target).minus(targetCap.price).div(targetCap.price).times(100).toFixed(2, BigNumber.ROUND_DOWN)\n        ).toFormat()}%)`\n      });\n    });\n\n    tableCols[tableCols.length - 1].title = `${symbol} Target`;\n    setTableData(data);\n  };\n\n  const toFormat = (num, significantDigits = 2) => {\n    num = BigNumber(num);\n    if (num.eq(0)) return '0';\n    const [integerStr = '', decimalStr = ''] = num.toString().split('.');\n    const integerLen = integerStr === '0' ? 0 : integerStr.length;\n    if (integerLen > significantDigits) return new BigNumber(integerStr).toFormat();\n    const nonnullIndex = decimalStr.length ? decimalStr.split('').findIndex(_ => Number(_) > 0) : 0;\n    return BigNumber(num.toFixed(significantDigits - integerLen + nonnullIndex, 1)).toFormat();\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      tableRef.current();\n    }, 200);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [coins, symbol, tableCols]);\n\n  useEffect(() => {\n    ref.current();\n  }, []);\n\n  return (\n    <div className=\"cm-app\">\n      <div className=\"cm-symbol\">\n        <Select\n          showSearch\n          defaultValue={symbol}\n          style={{ width: 120 }}\n          onChange={_ => setSymbol(_)}\n          filterOption={(input, option) => (option?.label ?? '').toLowerCase().includes(input.toLowerCase())}\n          options={coins.map(_ => {\n            return {\n              value: _,\n              label: _\n            };\n          })}\n        />\n      </div>\n\n      <Table columns={tableCols} dataSource={tableData} scroll={{ x: 'max-content' }} pagination={{ pageSize: 100 }} />\n    </div>\n  );\n}\n\nexport default App;\n","const config = {\n  api: {\n    protocols: 'https://api.llama.fi/protocols',\n    pools: 'https://yields.llama.fi/pools'\n  },\n\n  url: 'https://defillama.com/yields/pool/',\n\n  coinmarketcap: {\n    url: 'https://tusd.trx.gift/coinmarketcap/',\n    detail: 'https://coinmarketcap.com/currencies/'\n  },\n\n  backlink: [\n    { name: 'home', url: '#/defillama' },\n    { name: 'target', url: '#/coinmarketcap' },\n    { name: 'defillama', url: 'https://defillama.com' },\n    { name: 'dexscreener', url: 'https://dexscreener.com' },\n    { name: 'geckoterminal', url: 'https://geckoterminal.com' },\n    { name: 'dexview', url: 'https://dexview.com' }\n  ]\n};\n\nmodule.exports = config;\n"],"names":["BigNumber","config","EXPONENTIAL_AT","coinData","setCoinData","useState","coins","setCoins","symbol","setSymbol","tableCols","title","dataIndex","fixed","width","render","text","record","_jsx","Typography","Text","type","highlight","children","Link","href","concat","detail","slug","target","rel","tableData","setTableData","ref","useRef","tableRef","current","async","data","fetch","url","json","symbols","map","_","capData","circulating_supply","quote","USD","price","market_cap","totalSupply","marketCap","targetCap","filter","forEach","i","div","push","id","toFormat","minus","times","toFixed","ROUND_DOWN","length","num","significantDigits","arguments","undefined","eq","integerStr","decimalStr","toString","split","integerLen","nonnullIndex","findIndex","Number","useEffect","timer","setTimeout","clearTimeout","_jsxs","className","Select","showSearch","defaultValue","style","onChange","filterOption","input","option","_option$label","label","toLowerCase","includes","options","value","Table","columns","dataSource","scroll","x","pagination","pageSize","module","exports","api","protocols","pools","coinmarketcap","backlink","name"],"sourceRoot":""}